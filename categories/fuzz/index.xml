<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>FUZZ on iC0rner</title><link>https://i-corner.github.io/categories/fuzz/</link><description>Recent content in FUZZ on iC0rner</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Example Person</copyright><lastBuildDate>Sun, 27 Apr 2025 11:14:02 +0800</lastBuildDate><atom:link href="https://i-corner.github.io/categories/fuzz/index.xml" rel="self" type="application/rss+xml"/><item><title>Fuzz101_1</title><link>https://i-corner.github.io/p/fuzz101_1/</link><pubDate>Sun, 27 Apr 2025 11:14:02 +0800</pubDate><guid>https://i-corner.github.io/p/fuzz101_1/</guid><description>&lt;img src="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250419184614.png" alt="Featured image of post Fuzz101_1" />&lt;h3 id="涉及的漏洞应用和cve">涉及的漏洞应用和CVE
&lt;/h3>&lt;p>&lt;strong>Xpdf&lt;/strong>
&lt;strong>CVE-2019-13288&lt;/strong>&lt;/p>
&lt;h3 id="总结">总结
&lt;/h3>&lt;ol>
&lt;li>docker 网页gui环境搭建&lt;/li>
&lt;li>AFL++基础使用，编译插桩和运行fuzz&lt;/li>
&lt;li>使用gdb进行crash追踪和分析&lt;/li>
&lt;/ol>
&lt;h3 id="读前告知">读前告知
&lt;/h3>&lt;p>环境及一些路径问题笔者并不一定完全描述清楚，请读者自行检索解决
记住，好记性不如烂笔头！多多实践！&lt;/p>
&lt;h3 id="环境准备">环境准备
&lt;/h3>&lt;h4 id="基础系统">基础系统
&lt;/h4>&lt;p>笔者较懒且喜欢gui，还有一个问题就是&lt;strong>虚拟机开的太久有时会自己卡死&lt;/strong>，而fuzz的过程总是漫长的，于是使用&lt;code>windows+docker+kasmweb&lt;/code>的方式使用，即网页版Ubuntu
windows需要先安装WSL和docker desktop，再找到core-ubuntu-focal的镜像进行下载&lt;/p>
&lt;p>原就为Linux的读者完全可以接着往下看&lt;/p>
&lt;p>&lt;img src="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250419142022.png"
width="1518"
height="445"
srcset="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250419142022_hu_8473eb079451691f.png 480w, https://i-corner.github.io/p/fuzz101_1/Pastedimage20250419142022_hu_7845e4ba48e732c0.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="341"
data-flex-basis="818px"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">docker run -d --name fuzz_course --shm-size&lt;span class="o">=&lt;/span>512m -p 6901:6901 -e &lt;span class="nv">VNC_PW&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">123456&lt;/span> -u root --privileged kasmweb/core-ubuntu-focal:x86_64-1.16.0-rolling-daily
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="麻烦事情">麻烦事情
&lt;/h4>&lt;p>由于为docker老镜像，大部分底层依赖等都没有更新，所以这里需要
换源apt-update、gcc、llvm、python、pip等底层依赖升级
（此处可以结合AFL安装的前置条件一同完成）&lt;/p>
&lt;h4 id="构建xpdf">构建xpdf
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> &lt;span class="nv">$HOME&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir fuzzing_xpdf &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> fuzzing_xpdf/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://dl.xpdfreader.com/old/xpdf-3.02.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar -xvzf xpdf-3.02.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> xpdf-3.02
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sudo apt install -y build-essential gcc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure --prefix&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$HOME&lt;/span>&lt;span class="s2">/fuzzing_xpdf/install/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="测试xpdf">测试xpdf
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> &lt;span class="nv">$HOME&lt;/span>/fuzzing_xpdf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir pdf_examples &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> pdf_examples
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://github.com/mozilla/pdf.js-sample-files/raw/master/helloworld.pdf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget http://www.africau.edu/images/default/sample.pdf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://www.melbpc.org.au/wp-content/uploads/2017/10/small-example-pdf-file.pdf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$HOME&lt;/span>/fuzzing_xpdf/install/bin/pdfinfo -box -meta &lt;span class="nv">$HOME&lt;/span>/fuzzing_xpdf/pdf_examples/helloworld.pdf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="打开pdf及测试">打开pdf及测试
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$HOME&lt;/span>/fuzzing_xpdf/install/bin/pdfinfo -box -meta &lt;span class="nv">$HOME&lt;/span>/fuzzing_xpdf/pdf_examples/helloworld.pdf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250419162011.png"
width="914"
height="295"
srcset="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250419162011_hu_782b003f194cf58e.png 480w, https://i-corner.github.io/p/fuzz101_1/Pastedimage20250419162011_hu_dbcf975d9c006fa0.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="309"
data-flex-basis="743px"
>&lt;/p>
&lt;h4 id="afl安装">AFL安装
&lt;/h4>&lt;p>&lt;a class="link" href="https://github.com/AFLplusplus/AFLplusplus/blob/stable/docs/INSTALL.md" target="_blank" rel="noopener"
>https://github.com/AFLplusplus/AFLplusplus/blob/stable/docs/INSTALL.md&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">sudo apt-get update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install -y build-essential python3-dev automake cmake git flex bison libglib2.0-dev libpixman-1-dev python3-setuptools cargo libgtk-3-dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># try to install llvm 14 and install the distro default if that fails&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install -y lld-14 llvm-14 llvm-14-dev clang-14 &lt;span class="o">||&lt;/span> sudo apt-get install -y lld llvm llvm-dev clang
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install -y gcc-&lt;span class="k">$(&lt;/span>gcc --version&lt;span class="p">|&lt;/span>head -n1&lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;s/\..*//&amp;#39;&lt;/span>&lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;s/.* //&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>-plugin-dev libstdc++-&lt;span class="k">$(&lt;/span>gcc --version&lt;span class="p">|&lt;/span>head -n1&lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;s/\..*//&amp;#39;&lt;/span>&lt;span class="p">|&lt;/span>sed &lt;span class="s1">&amp;#39;s/.* //&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>-dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install -y ninja-build &lt;span class="c1"># for QEMU mode&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install -y cpio libcapstone-dev &lt;span class="c1"># for Nyx mode&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install -y wget curl &lt;span class="c1"># for Frida mode&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install -y python3-pip &lt;span class="c1"># for Unicorn mode&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone https://github.com/AFLplusplus/AFLplusplus
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> AFLplusplus
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make distrib
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Tips:lld、llvm底层依赖Ubuntu20.04 不一定能直接装到14版本，可以选择装13的，gcc同理&lt;/p>
&lt;h3 id="afl编译xpdf">AFL编译xpdf
&lt;/h3>&lt;p>删除之前的编译文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">rm -r &lt;span class="nv">$HOME&lt;/span>/fuzzing_xpdf/install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> 原安装包位置
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make clean
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用&lt;strong>afl-clang-fast 编译&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">LLVM_CONFIG&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;llvm-config-13&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$HOME&lt;/span>/AFLplusplus/afl-clang-fast &lt;span class="nv">CXX&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$HOME&lt;/span>/AFLplusplus/afl-clang-fast++ ./configure --prefix&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$HOME&lt;/span>&lt;span class="s2">/fuzzing_xpdf/install/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="运行fuzz">运行fuzz
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">afl-fuzz -i &lt;span class="nv">$HOME&lt;/span>/fuzzing_xpdf/pdf_examples/ -o &lt;span class="nv">$HOME&lt;/span>/fuzzing_xpdf/out/ -s &lt;span class="m">123&lt;/span> -- &lt;span class="nv">$HOME&lt;/span>/fuzzing_xpdf/install/bin/pdftotext @@ &lt;span class="nv">$HOME&lt;/span>/fuzzing_xpdf/output
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;em>-i&lt;/em> indicates the directory where we have to put the input cases (a.k.a file examples)&lt;br>
-i 表示我们需要放置输入案例（即文件示例）的目录&lt;/li>
&lt;li>&lt;em>-o&lt;/em> indicates the directory where AFL++ will store the mutated files&lt;br>
-o 表示 AFL++ 将存储突变文件的目录&lt;/li>
&lt;li>&lt;em>-s&lt;/em> indicates the static random seed to use&lt;br>
-s 表示要使用的静态随机种子&lt;/li>
&lt;li>&lt;em>@@&lt;/em> is the placeholder target&amp;rsquo;s command line that AFL will substitute with each input file name&lt;br>
@@是 AFL 将替换为每个输入文件名的目标命令行占位符&lt;/li>
&lt;/ul>
&lt;p>因此，基本上 fuzzer 将会运行这个命令&lt;code>$HOME/fuzzing_xpdf/install/bin/pdftotext &amp;lt;input-file-name&amp;gt; $HOME/fuzzing_xpdf/output&lt;/code> 对每个不同的输入文件&lt;/p>
&lt;p>&lt;strong>Tips&lt;/strong>：使用docker时需要额外使用&lt;code>echo core &amp;gt; /proc/sys/kernel/core_pattern&lt;/code>，是因为如果系统配置为将核心转储文件（core）通知发送到外部程序，将导致将崩溃信息发送到Fuzzer之间的延迟增大，进而可能将崩溃被误报为超时，所以得临时修改&lt;code>core_pattern&lt;/code>文件，这也是为何构建容器时使用&lt;code>--privileged&lt;/code>方便改写系统文件&lt;/p>
&lt;p>&lt;img src="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250419182502.png"
width="872"
height="522"
srcset="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250419182502_hu_aea58a56804d38ef.png 480w, https://i-corner.github.io/p/fuzz101_1/Pastedimage20250419182502_hu_4db2d08512ddb01.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="167"
data-flex-basis="400px"
>&lt;/p>
&lt;p>静待一段时间，等到出现crash&lt;/p>
&lt;p>&lt;img src="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250419184614.png"
width="895"
height="539"
srcset="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250419184614_hu_5df131b5b3cd2fae.png 480w, https://i-corner.github.io/p/fuzz101_1/Pastedimage20250419184614_hu_86d0afeedf52c8ee.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="166"
data-flex-basis="398px"
>&lt;/p>
&lt;h3 id="练习题">练习题
&lt;/h3>&lt;h4 id="重现crash">重现crash
&lt;/h4>&lt;p>先找到我们crash的文件所在地
&lt;code>$HOME/fuzzing_xpdf/install/bin/pdftotext ./out/default/crashes/id\:000000\,sig\:11\,src\:000002\,time\:348479\,execs\:218044\,op\:havoc\,rep\:15&lt;/code>
执行我们引起crash的输入&lt;/p>
&lt;p>&lt;img src="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421200243.png"
width="889"
height="106"
srcset="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421200243_hu_c2924ce818181a7a.png 480w, https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421200243_hu_d36aa497b31af639.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="838"
data-flex-basis="2012px"
>&lt;/p>
&lt;h4 id="调试crash以找到问题所在的地方">调试crash以找到问题所在的地方
&lt;/h4>&lt;p>进入gdb（推荐可以使用pwngdb，但要注意寻找兼容Ubuntu20.04版本的）
输入我们的crash，注意不要使用&lt;code>&amp;lt;&lt;/code>管道定向，保持源二进制文件的执行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">pwndbg&amp;gt; run ./out/default/crashes/id\:000000\,sig\:11\,src\:000002\,time\:348479\,execs\:218044\,op\:havoc\,rep\:15
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>尝试输入&lt;code>bt&lt;/code>发现栈追踪无限增长，&lt;del>&lt;strong>不能定位，于是另寻它路&lt;/strong>&lt;/del>&lt;/p>
&lt;p>&lt;strong>好吧，实际上这就是漏洞（无限递归）所在&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421201349.png"
width="1102"
height="568"
srcset="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421201349_hu_2185e90c282aba7a.png 480w, https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421201349_hu_cded6dde6672ea8.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="194"
data-flex-basis="465px"
>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.cvedetails.com/cve/CVE-2019-13288/" target="_blank" rel="noopener"
>https://www.cvedetails.com/cve/CVE-2019-13288/&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421201500.png"
width="898"
height="218"
srcset="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421201500_hu_41483d883cc550ef.png 480w, https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421201500_hu_54cbbad01e214979.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="411"
data-flex-basis="988px"
>&lt;/p>
&lt;h4 id="修复问题">修复问题
&lt;/h4>&lt;p>通过bt直接定位到Parser.cc文件
结合源码可以得知，是makestream后的shift函数又调用了getOBJ，而getobj又可以makestream，造成了三角循环，无限递归，导致报错&lt;/p>
&lt;p>&lt;img src="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421210028.png"
width="280"
height="87"
srcset="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421210028_hu_ec89d75ba2fb09df.png 480w, https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421210028_hu_f1a3f12c540a0f4d.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="321"
data-flex-basis="772px"
>&lt;/p>
&lt;p>最简单粗暴的方法就是修改掉三角循环中的一角，重新make就不会触发漏洞，但是需要考虑当原本程序执行逻辑恰当！！！&lt;/p>
&lt;p>实际xpdf在4.02以后增加了递归次数的限制
在会导致该三角循环的地方，增加了循环次数判断
&lt;a class="link" href="https://github.com/ashutoshvarma/libxpdf/blob/master/xpdf-4.02/xpdf/Parser.cc" target="_blank" rel="noopener"
>https://github.com/ashutoshvarma/libxpdf/blob/master/xpdf-4.02/xpdf/Parser.cc&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421211011.png"
width="514"
height="75"
srcset="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421211011_hu_d8d84ce8c81500d9.png 480w, https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421211011_hu_5c65873394b4966e.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="685"
data-flex-basis="1644px"
>
&lt;img src="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421211122.png"
width="545"
height="136"
srcset="https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421211122_hu_6ce7eded6047fb5d.png 480w, https://i-corner.github.io/p/fuzz101_1/Pastedimage20250421211122_hu_6b45eaee9e46f0a.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="400"
data-flex-basis="961px"
>&lt;/p></description></item></channel></rss>